/**
 * Grid System
 * 12-column responsive grid
 */

// ============================================================================
// Row
// ============================================================================

.row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -(@grid-gutter / 2);
    margin-right: -(@grid-gutter / 2);
}

.no-gutters {
    margin-left: 0;
    margin-right: 0;
    
    > .col,
    > [class*="col-"] {
        padding-left: 0;
        padding-right: 0;
    }
}

// ============================================================================
// Columns
// ============================================================================

.col {
    flex: 1 0 0%;
    padding-left: (@grid-gutter / 2);
    padding-right: (@grid-gutter / 2);
}

// Generate column classes
.generate-columns(@n, @i: 1) when (@i =< @n) {
    .col-@{i} {
        flex: 0 0 auto;
        width: (@i / @n) * 100%;
        padding-left: (@grid-gutter / 2);
        padding-right: (@grid-gutter / 2);
    }
    .generate-columns(@n, (@i + 1));
}

.generate-columns(@grid-columns);

// ============================================================================
// Responsive Grid
// ============================================================================

// Small screens and up (>=576px)
@media (min-width: @breakpoint-sm) {
    .col-sm {
        flex: 1 0 0%;
    }
    
    .generate-sm-columns(@n, @i: 1) when (@i =< @n) {
        .col-sm-@{i} {
            flex: 0 0 auto;
            width: (@i / @n) * 100%;
        }
        .generate-sm-columns(@n, (@i + 1));
    }
    
    .generate-sm-columns(@grid-columns);
}

// Medium screens and up (>=768px)
@media (min-width: @breakpoint-md) {
    .col-md {
        flex: 1 0 0%;
    }
    
    .generate-md-columns(@n, @i: 1) when (@i =< @n) {
        .col-md-@{i} {
            flex: 0 0 auto;
            width: (@i / @n) * 100%;
        }
        .generate-md-columns(@n, (@i + 1));
    }
    
    .generate-md-columns(@grid-columns);
}

// Large screens and up (>=992px)
@media (min-width: @breakpoint-lg) {
    .col-lg {
        flex: 1 0 0%;
    }
    
    .generate-lg-columns(@n, @i: 1) when (@i =< @n) {
        .col-lg-@{i} {
            flex: 0 0 auto;
            width: (@i / @n) * 100%;
        }
        .generate-lg-columns(@n, (@i + 1));
    }
    
    .generate-lg-columns(@grid-columns);
}

// Extra large screens and up (>=1200px)
@media (min-width: @breakpoint-xl) {
    .col-xl {
        flex: 1 0 0%;
    }
    
    .generate-xl-columns(@n, @i: 1) when (@i =< @n) {
        .col-xl-@{i} {
            flex: 0 0 auto;
            width: (@i / @n) * 100%;
        }
        .generate-xl-columns(@n, (@i + 1));
    }
    
    .generate-xl-columns(@grid-columns);
}

// ============================================================================
// Column Ordering
// ============================================================================

.order-first {
    order: -1;
}

.order-last {
    order: @grid-columns + 1;
}

.order-0 { order: 0; }
.order-1 { order: 1; }
.order-2 { order: 2; }
.order-3 { order: 3; }
.order-4 { order: 4; }
.order-5 { order: 5; }

// ============================================================================
// Column Offset
// ============================================================================

.generate-offsets(@n, @i: 0) when (@i < @n) {
    .offset-@{i} {
        margin-left: (@i / @n) * 100%;
    }
    .generate-offsets(@n, (@i + 1));
}

.generate-offsets(@grid-columns);

// Responsive offsets
@media (min-width: @breakpoint-sm) {
    .generate-sm-offsets(@n, @i: 0) when (@i < @n) {
        .offset-sm-@{i} {
            margin-left: (@i / @n) * 100%;
        }
        .generate-sm-offsets(@n, (@i + 1));
    }
    
    .generate-sm-offsets(@grid-columns);
}

@media (min-width: @breakpoint-md) {
    .generate-md-offsets(@n, @i: 0) when (@i < @n) {
        .offset-md-@{i} {
            margin-left: (@i / @n) * 100%;
        }
        .generate-md-offsets(@n, (@i + 1));
    }
    
    .generate-md-offsets(@grid-columns);
}

@media (min-width: @breakpoint-lg) {
    .generate-lg-offsets(@n, @i: 0) when (@i < @n) {
        .offset-lg-@{i} {
            margin-left: (@i / @n) * 100%;
        }
        .generate-lg-offsets(@n, (@i + 1));
    }
    
    .generate-lg-offsets(@grid-columns);
}

@media (min-width: @breakpoint-xl) {
    .generate-xl-offsets(@n, @i: 0) when (@i < @n) {
        .offset-xl-@{i} {
            margin-left: (@i / @n) * 100%;
        }
        .generate-xl-offsets(@n, (@i + 1));
    }
    
    .generate-xl-offsets(@grid-columns);
}
